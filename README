Setup
=====

Run `npm install`
Run `bundle install`
Copy .env.example to .env and fill in the missing values

Running the app
===============

Run `bundle exec rackup`

Authentication
==============

You can add users with the provided `add_user.rb` script. It asks for a username and password.
The password will be hashed with BCrypt and stored.

It is also possible to authenticate requests with an authentication token. Use the provided
`add_auth_key.rb` script that generates a token.

The difference between these methods is that the username/password combination is used
for interactive logins: The user that visits the webapp gets a browser session.

The authentication token is used for non-interactive commands: In my case, I have a Tasker
script on my phone that performs an HTTP request. That request is authenticated by sending
the user=username&authentication_key=token along with the request.

Running in production
=====================

The app itself is hosted by thin, but this is a working configuration
for nginx. It should be hosted ssl-only (except for maybe a redirect from http to https).

http://verlichting_cluster is configured elsewhere.

server {
  listen 443;
  server_name ~^lights.*\.host\.com$;

  ssl on;
  ssl_certificate /usr/local/nginx/conf/lights.host.com.crt;
  ssl_certificate_key /etc/ssl/private/lights.host.com.key;

  allow all;

  location / {
    root /var/www/verlichting/build;
  }

  location /my_zwave {
    proxy_pass http://verlichting_cluster;
    proxy_pass_header Server;
    proxy_set_header Host $http_host;

    # This is necessary for secure cookies.
    proxy_set_header X-Forwarded-Proto $scheme;
  }

